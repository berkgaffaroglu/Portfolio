{"version":3,"sources":["components/CustomSpinner.js","components/FetchAll.js","components/FetchDetails.js","components/Idle.js","components/Navigation.js","components/Home.js","components/ContactDirect.js","components/Contact.js","components/Search.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["CustomSpinner","className","style","marginTop","Spinner","animation","variant","FetchAll","props","state","projectList","Render","fetchAllProjects","bind","this","fetch","websiteUrl","projectResponse","json","data","setState","projects","Fragment","textTransform","marginBottom","map","project","index","urlDetail","detailUrl","key","Card","to","slug","Img","src","imageUrl","image","Body","Title","fontFamily","title","border","Text","description","ListGroup","ListGroupItem","backend_category","frontend_category","Button","Component","FetchDetails","currentUrl","live_version","github_repository","fetchDetails","window","location","pathname","path","urlImage","split","Project","projectImageArray","images","CarouselItem","alt","Carousel","backgroundColor","content","class","live_server","target","rel","href","Alert","Heading","Idle","withRouter","Navigation","activeKey","value","handleChange","handleSubmit","eventKey","event","history","push","preventDefault","Navbar","expand","exact","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","Form","onSubmit","inline","FormControl","width","onChange","type","placeholder","Home","fetchGeneralInformation","generalInfoResponse","who_am_i","what_are_my_technical_skills","what_is_my_personality","stackoverflow_link","github_link","twitter","linkedin","ContactDirect","hasErrors","showMessage","activeContact","company_name","e_mail","skype","getCookie","e","csrftoken","method","headers","body","JSON","stringify","then","name","cookieValue","document","cookie","cookies","i","length","trim","substring","decodeURIComponent","overlayInfo","fontSize","message","Group","Label","Control","as","rows","Contact","onSelect","defaultActiveKey","Item","current_location","Footer","color","App","component","Search","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.4abc9404.chunk.js","sourcesContent":["import React from 'react'\nimport {Spinner} from 'react-bootstrap'\nfunction CustomSpinner() {\n    return (\n        <div className=\"text-center\" style={{marginTop:\"25%\"}}>\n            <Spinner animation=\"grow\" variant=\"success\">\n              <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n        </div>\n    )\n}\n\nexport default CustomSpinner\n","import React, { Component } from 'react'\nimport { Card, ListGroupItem, ListGroup, Button, Spinner } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { AiOutlineProject } from 'react-icons/ai'\nimport CustomSpinner from './CustomSpinner'\n\nexport class FetchAll extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      projectList: [],\n      Render: false,\n\n    }\n    this.fetchAllProjects = this.fetchAllProjects.bind(this)\n  }\n  componentWillMount() {\n    this.fetchAllProjects()\n  }\n\n  async fetchAllProjects() {\n      var projectResponse = await(fetch(`${this.props.websiteUrl}/api/project-list/`))\n      var data = await projectResponse.json()\n      this.setState({\n        projectList: data,\n        Render:true\n      })\n  }\n\n\n\n  render() {\n    var projects = this.state.projectList\n    const websiteUrl = this.props.websiteUrl\n    if (this.state.Render) {\n      return (\n        <React.Fragment>\n          <h3 className=\"text-black text-center\" style={{ fontFamily: \"Oswald\" }, { textTransform: 'uppercase' }}><strong> <AiOutlineProject />  Projects</strong></h3>\n          <hr className=\"separator\" />\n          <div className=\"row\" style={{ marginBottom: \"200px\" }}>\n\n            {projects.map(function (project, index) {\n              function urlImage(imageUrl) {\n                return (`${websiteUrl}/api` + imageUrl)\n              }\n              function urlDetail(detailUrl) {\n                return (\"/project-detail/\" + detailUrl)\n              }\n              return (\n                <div key={index} className=\"col-lg-4 col-md-6 col-sm-11 col-xs-12 mt-4\">\n                  <Card  className=\"project-card text-center\">\n                    <LinkContainer to={urlDetail(project.slug)}><Card.Img variant=\"top\" className=\"project-card-image\" src={urlImage(project.image)} /></LinkContainer>\n                    <Card.Body><Card.Title><LinkContainer to={urlDetail(project.slug)}><h2 className=\"project-title\" style={{ textTransform: \"uppercase\" }, { fontFamily: \"Raleway\" }}>{project.title}</h2></LinkContainer><hr style={{ border: \"1px solid #cccccc\" }} /></Card.Title>\n                      <Card.Text><span style={{ fontFamily: \"Raleway\" }}>{project.description}</span></Card.Text>\n                    </Card.Body>\n\n                    <ListGroup className=\"list-group-flush\"><ListGroupItem ><p style={{ fontFamily: \"Raleway\" }}>Technologies used: {project.backend_category} {project.backend_category != null && project.frontend_category != null ? ',' : ''} {project.frontend_category}</p></ListGroupItem></ListGroup>\n                    <Card.Body><LinkContainer to={urlDetail(project.slug)}><Button className=\"details-button\" variant=\"success btn\"> <h3 style={{ textTransform: \"uppercase\" }, { fontFamily: \"Oswald\" }}> DETAILS </h3> </Button></LinkContainer></Card.Body>\n                  </Card>\n                </div>\n              )\n            })}\n          </div>\n\n        </React.Fragment>\n      )\n    } else {\n      return (\n        <CustomSpinner />\n      )\n    }\n  }\n\n}\n\nexport default FetchAll\n","import React, { Component } from 'react'\nimport {withRouter, useLocation } from 'react-router-dom';\nimport { Carousel, CarouselItem, Alert } from 'react-bootstrap';\nimport CustomSpinner from './CustomSpinner';\nimport { TiCancel } from 'react-icons/ti'\nexport class FetchDetails extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            project: '',\n            currentUrl: '',\n            Render: false,\n            live_version: false,\n            github_repository: false,\n            \n        }\n\n        \n\n    }\n\n    componentWillMount() {\n        this.fetchDetails(window.location.pathname)\n\n    }\n\n    async fetchDetails(path) {\n        \n        var projectResponse = await (fetch(`${this.props.websiteUrl}/api${path}`))\n        var data = await projectResponse.json()\n        this.setState({\n            project: data,\n            Render: true\n        })\n\n    }\n    render() {\n        var websiteUrl = this.props.websiteUrl\n        /* In here, Django's ImageField doesn't work and I manipulate strings to get the images from the api.*/\n        function urlImage(imageUrl) {\n            imageUrl = imageUrl.split(websiteUrl)[1]\n            return (`${websiteUrl}/api${imageUrl}`)\n        }\n        var Project = this.state.project\n        if (this.state.Render) {\n            /* Mapping the extra images in the project for the carousel.*/\n            var projectImageArray = this.state.project[1]\n            if (projectImageArray) {\n                const images = projectImageArray.map((project, index) =>\n\n                    <CarouselItem key={index}>\n                        <img className=\"project-detail-img\" src={urlImage(project.image)} alt=\"-\" />\n                    </CarouselItem>\n                );\n                return (\n                    <div>\n\n                        <center>\n                            <Carousel className=\"bg-dark text-white p-3\">\n\n                                <CarouselItem>\n                                    <img className=\"project-detail-img\" src={urlImage(Project[0].image)} alt=\"-\" />\n                                </CarouselItem>\n                                {images}\n\n                            </Carousel>\n                        </center>\n\n                        <div className=\"jumbotron jumbotron-fluid text-black\" style={{ backgroundColor: \"white\" }}>\n                            <strong><h1 className=\"display-4 ml-4\" style={{ textTransform: \"uppercase\" }}>{Project[0].title}</h1></strong>\n                            <hr className=\"my-4 separator\" />\n                            <h3 className=\"lead ml-4\" ><p className=\"text-success\" style={{ fontFamily: \"Oswald\" }}><b>Content:</b></p>{Project[0].content}</h3>\n                            <hr className=\"my-4 separator\" />\n                            <h3 class=\"lead ml-4\"><p className=\"text-success\" style={{ fontFamily: \"Oswald\" }}><b>Technologies Used:</b></p> {Project[0].backend_category} {Project[0].backend_category != null && Project[0].frontend_category != null ? ',' : ''} {Project[0].frontend_category}</h3>\n                            <hr className=\"my-4 separator\" />\n\n\n\n\n\n                            <h3 class=\"lead ml-4\"><p className=\"text-success\" style={{ fontFamily: \"Oswald\" }}><b>Live Version:</b></p>\n                                {Project[0].live_server != null ? <a className=\"text-primary\" target=\"_blank\" rel=\"noopener noreferrer\" href={Project[0].live_server}>Click Here</a> : <p><TiCancel /> No</p>}\n                            </h3>\n                            <hr className=\"my-4 separator\" />\n                            <h3 class=\"lead ml-4\">\n                                <p className=\"text-success\" style={{ fontFamily: \"Oswald\" }}><b>The Code:</b></p>\n                                {Project[0].live_server != null ? <a className=\"text-primary\" target=\"_blank\" rel=\"noopener noreferrer\" href={Project[0].github_repository}>Click Here</a> : <p><TiCancel /> No</p>}\n                            </h3>\n                        </div>\n                    </div>\n                )\n            } else {\n                return (\n                    <Alert variant=\"danger\">\n                        <Alert.Heading >Couldn't find anything!</Alert.Heading>\n                        <p>\n                            Looks like there are no project related to your search. Please try to search another title.\n        </p>\n                    </Alert>\n                )\n            }\n        } else {\n            return (\n                <CustomSpinner />\n            )\n        }\n\n    }\n}\n\nexport default withRouter(FetchDetails)\n","import React, { Component } from 'react'\nimport { Alert } from 'react-bootstrap'\nexport class Idle extends Component {\n    render() {\n        return (\n            <div>\n                <Alert variant=\"danger\">\n                    <Alert.Heading >Sorry! There was an error.</Alert.Heading>\n                    <p>\n                        Looks like the page that you are looking for either removed or doesn't exists.\n        </p>\n                </Alert>\n            </div>\n        )\n    }\n}\n\nexport default Idle\n","import React, { Component } from 'react'\nimport { Nav, Form, Button, FormControl,Navbar} from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { withRouter } from 'react-router-dom'\nimport {MdSearch} from \"react-icons/md\";\n\nclass Navigation extends Component {\n    constructor(state) {\n        super(state);\n        this.state = {\n            activeKey: null,\n            value: '',\n        };\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleSelect(eventKey) {\n        this.setState({\n            activeKey: eventKey\n        })\n    }\n    handleChange(event) {\n\n        this.setState({ value: event.target.value });\n    }\n\n    handleSubmit(event) {\n        if(this.state.value != \"\") {\n        this.props.history.push(`/search/${this.state.value}`);\n        } else {\n            event.preventDefault();\n        }\n    }\n\n    render() {\n\n        return (\n            <Navbar style={{backgroundColor:\"#212121\"}} className=\"p-2 mb-5\" variant=\"dark\" expand=\"lg\">\n                <LinkContainer exact to='/'><Navbar.Brand><span className=\"nav-element-header\">Berk Gaffaroglu</span></Navbar.Brand></LinkContainer>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"nav-element\">\n                    <LinkContainer exact to='/'><Nav.Link style={{marginBottom:\"100px\"}} className=\"custom-navlink\">Home</Nav.Link></LinkContainer>\n                    <LinkContainer to='/projects'><Nav.Link className=\"custom-navlink\">Projects</Nav.Link></LinkContainer>\n                    <LinkContainer to='/contact/direct'><Nav.Link className=\"custom-navlink\">Contact</Nav.Link></LinkContainer>\n                    </Nav>\n                    <Form className=\"mr-auto\"  onSubmit={this.handleSubmit} inline>\n                        <FormControl className=\"ml-lg-5\" style={{width:\"250px\"}} value={this.state.value} onChange={this.handleChange} type=\"text\" placeholder=\"Search in projects\" />\n                        <Button type=\"submit\" className=\"ml-lg-1 ml-xs-3\" variant=\"success\"><MdSearch/></Button>\n                    </Form>\n                </Navbar.Collapse>\n            </Navbar>\n            \n\n        )\n    }\n}\n\nexport default withRouter(Navigation)\n","import React, { Component } from 'react'\nimport { DiStackoverflow } from 'react-icons/di'\nimport { FaGithub } from 'react-icons/fa'\nimport { AiFillTwitterSquare } from 'react-icons/ai'\nimport { GrLinkedin, GrCircleInformation, GrDocumentUser } from 'react-icons/gr'\nimport { RiAccountPinCircleLine } from 'react-icons/ri'\nimport CustomSpinner from './CustomSpinner'\n\nexport class Home extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            data: '',\n            Render: false\n        }\n    }\n\n    componentWillMount() {\n        this.fetchGeneralInformation()\n    }\n\n    async fetchGeneralInformation() {\n        var generalInfoResponse = await (fetch(`${this.props.websiteUrl}/api/general-information/`))\n        var data = await generalInfoResponse.json()\n        this.setState({\n            data: data,\n            Render: true\n        })\n\n    }\n\n    render() {\n\n        if (this.state.Render) {\n            return (\n\n                <div className=\"parentComponent\">\n\n                    <h3 className=\"text-black text-center\" style={{ fontFamily: \"Oswald\" }}><GrCircleInformation />  Information About Me</h3>\n                    <hr className=\"separator\" />\n                    <div className=\"row mb-5 mt-5\">\n\n                        <div className=\"col-lg-4 col-md-6 col-sm-12 mb-5\">\n                            {this.state.who_am_i}\n                            <h4 className=\"text-black\" style={{ fontFamily: \"Oswald\" }}>Who am I? </h4>\n                            <p className=\"text-black\">\n                                {this.state.data[0].who_am_i}\n                </p>\n                        </div>\n                        <div className=\"col-lg-4 col-md-6 col-sm-12 mb-5\">\n                            <h4 className=\"text-black\" style={{ fontFamily: \"Oswald\" }}>What are my technical skills? </h4>\n                            <p className=\"text-black\">\n                            {this.state.data[0].what_are_my_technical_skills}\n\n         </p>\n                        </div>\n                        <div className=\"col-lg-4 col-md-6 col-sm-12\">\n                            <h4 className=\"text-black\" style={{ fontFamily: \"Oswald\" }}>What is my personality? </h4>\n                            <p className=\"text-black\">\n                            {this.state.data[0].what_is_my_personality}\n        </p>\n                        </div>\n                    </div>\n                    <div className=\"resumeSection mt-5\">\n                        <h3 className=\"text-black text-center\" style={{ fontFamily: \"Oswald\" }}><GrDocumentUser />  My Resume</h3>\n                        <hr className=\"separator\" />\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <p className=\"text-black text-center\">The resume is important for candidates who applied for jobs. You can download my resume just by clicking <a href=\"#\">here</a>.</p>\n                            </div>\n\n                        </div>\n                    </div>\n                    <div className=\"mediaAccounts mb-5 mt-5\">\n                        <h3 className=\"text-black text-center\" style={{ fontFamily: \"Oswald\" }}><RiAccountPinCircleLine />  My Accounts</h3>\n                        <hr className=\"separator\" />\n                        <div className=\"row text-center\">\n\n                            <div className=\"col-lg-4 col-md-6 col-sm-12 mb-3 mt-3\">\n                                <a className=\"btn btn-lg btn-outline-dark social-media-button\" target=\"_blank\" rel=\"noopener noreferrer\" href={this.state.data[0].stackoverflow_link}><h3 style={{ fontFamily: \"Oswald\" }}><DiStackoverflow /> Stackoverflow</h3></a>\n                            </div>\n                            <div className=\"col-lg-4 col-md-6 col-sm-12 mb-3 mt-3\">\n                                <a className=\"btn btn-lg btn-outline-dark social-media-button\" target=\"_blank\" rel=\"noopener noreferrer\" href={this.state.data[0].github_link}><h3 style={{ fontFamily: \"Oswald\" }}><FaGithub /> Github</h3></a>\n                            </div>\n                            <div className=\"col-lg-4 col-md-6 col-sm-12 mb-3 mt-3\">\n                                <a className=\"btn btn-lg btn-outline-dark social-media-button\" target=\"_blank\" rel=\"noopener noreferrer\" href={this.state.data[0].twitter}><h3 style={{ fontFamily: \"Oswald\" }}><AiFillTwitterSquare /> Twitter</h3></a>\n                            </div>\n                            <div className=\"col-lg-4 col-md-6 col-sm-12 mb-3 mt-3\">\n                                <a className=\"btn btn-lg btn-outline-dark social-media-button\" target=\"_blank\" rel=\"noopener noreferrer\" href={this.state.data[0].linkedin}><h3 style={{ fontFamily: \"Oswald\" }}><GrLinkedin /> Linkedin</h3></a>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        else { return (<CustomSpinner />) }\n    }\n}\n\nexport default Home\n","import React, { Component } from 'react'\nimport { Form, Alert } from 'react-bootstrap'\nimport {AiFillStar} from 'react-icons/ai'\nexport class ContactDirect extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            hasErrors: false,\n            showMessage: false,\n            activeContact: {\n                title: '',\n                content: '',\n                company_name: '',\n                e_mail: '',\n                skype: '',\n            },\n        }\n        this.getCookie = this.getCookie.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    handleChange(e) {\n        if (e.target.id === 'title') {\n            this.setState({\n                activeContact: {\n                    ...this.state.activeContact,\n                    title: e.target.value\n                }\n            });\n\n        } else if (e.target.id === 'content') {\n            this.setState({\n                activeContact: {\n                    ...this.state.activeContact,\n                    content: e.target.value\n                }\n            });\n\n        } else if (e.target.id === 'company_name') {\n            this.setState({\n                activeContact: {\n                    ...this.state.activeContact,\n                    company_name: e.target.value\n                }\n            });\n\n        } else if (e.target.id === 'e_mail') {\n            this.setState({\n                activeContact: {\n                    ...this.state.activeContact,\n                    e_mail: e.target.value\n                }\n            });\n\n        } else if (e.target.id === 'skype') {\n            this.setState({\n                activeContact: {\n                    ...this.state.activeContact,\n                    skype: e.target.value,\n                }\n            });\n\n        }\n    }\n\n    handleSubmit(event) {\n        if (this.state.activeContact.title != \"\" && this.state.activeContact.content != \"\" && this.state.activeContact.e_mail != \"\") {\n            var csrftoken = this.getCookie('csrftoken')\n            fetch(`${this.props.websiteUrl}/api/contact/`, {\n                method: 'POST',\n                headers: {\n                    'Content-type': 'application/json',\n                    'X-CSRFToken': csrftoken,\n                },\n                body: JSON.stringify(this.state.activeContact)\n            })\n                .then(\n                    this.setState({\n                        showMessage: true,\n                        hasErrors: false,\n                    })\n                )\n                .then(\n                    this.setState({\n                        activeContact: {\n                            title: '',\n                            content: '',\n                            company_name: '',\n                            e_mail: '',\n                            skype: '',\n                        }\n                    })\n                )\n        } else {\n            this.setState({\n                hasErrors: true,\n                showMessage: false,\n            })\n        }\n        event.preventDefault()\n    }\n\n    getCookie(name) {\n        var cookieValue = null;\n        if (document.cookie && document.cookie !== '') {\n            var cookies = document.cookie.split(';');\n            for (var i = 0; i < cookies.length; i++) {\n                var cookie = cookies[i].trim();\n                // Does this cookie string begin with the name we want?\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                    break;\n                }\n            }\n        }\n        return cookieValue;\n    }\n    render() {\n        const overlayInfo = (\n            <span className=\"text-danger\" style={{fontSize:\"15px\"}}> (<AiFillStar/>)</span>\n        )\n\n        if (this.state.showMessage) {\n            var message = <Alert className=\"alert alert-success\"><Alert.Heading ><span style={{fontFamily:\"Oswald\"}}>Your message sent!</span> </Alert.Heading><p style={{fontFamily:\"Raleway\"}}>This message sent to my admin page which I regularly check. \n                If you want a faster response please use my e-mail <a href=\"mailto:berk.gaffaroglu@gmail.com\">berk.gaffaroglu.gmail.com</a> I will try to return to your message as soon as possible.</p></Alert>\n        }\n        if (this.state.hasErrors) {\n            var message = <Alert className=\"alert alert-danger\">\n                <Alert.Heading>Your message couldn't send</Alert.Heading>\n                <p>Please fill the areas that are required.</p>\n            </Alert>\n        }\n        return (\n            <React.Fragment>\n                {message}\n                < Form onSubmit={this.handleSubmit} id=\"form\" >\n                    <Form.Group>\n                        <Form.Label>Title {overlayInfo}</Form.Label>\n                        <Form.Control id=\"title\" onChange={this.handleChange} type=\"text\" value={this.state.activeContact.title} />\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>Content {overlayInfo}</Form.Label>\n                        <Form.Control id=\"content\" as=\"textarea\" onChange={this.handleChange} value={this.state.activeContact.content} rows=\"3\" />\n                    </Form.Group>\n\n                    <Form.Group>\n                        <Form.Label>E- mail {overlayInfo}</Form.Label>\n                        <Form.Control id=\"e_mail\" type=\"text\" onChange={this.handleChange} value={this.state.activeContact.e_mail} rows=\"3\" />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Company Name</Form.Label>\n                        <Form.Control id=\"company_name\" type=\"text\" onChange={this.handleChange} value={this.state.activeContact.company_name} rows=\"3\" />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Label>Skype</Form.Label>\n                        <Form.Control id=\"skype\" type=\"text\" onChange={this.handleChange} value={this.state.activeContact.skype} rows=\"3\" />\n                    </Form.Group>\n                    <ul>\n                        <li key=\"987979472\"><Form.Group><p className=\"text-muted\">Please fill the required fields that have the symbol  <span className=\"text-danger\" style={{fontSize:\"15px\"}}>(<AiFillStar/>)</span></p></Form.Group></li>\n                    </ul>\n                    <Form.Group>\n\n                        <button type=\"submit\" className=\"btn btn-lg btn-success\">Send</button>\n                    </Form.Group>\n\n                </Form >\n            </React.Fragment>\n        )\n    }\n}\n\nexport default ContactDirect\n","import React, { Component } from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport ContactDirect from './ContactDirect'\nimport { GrContact } from 'react-icons/gr'\nimport { MdEmail } from 'react-icons/md'\nimport { RiInformationLine } from 'react-icons/ri'\nimport {IoMdContact} from 'react-icons/io'\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            showMessage: false,\n            content: <ContactDirect websiteUrl={this.props.websiteUrl} />,\n\n        }\n\n    }\n\n\n\n    render() {\n        const handleSelect = (eventKey) => {\n            if (eventKey == 0) {\n                this.setState({\n                    content: <ContactDirect websiteUrl={this.props.websiteUrl}/>\n                })\n            } else if (eventKey == 1) {\n                this.setState({\n                    content:\n                        <center>\n                            <div className=\"row\" style={{ marginTop: \"30px\" }}>\n                                <div className=\"col-md-6 mt-3 mb-3\">\n                                    <h1><MdEmail /></h1>\n                                    <p>berk.gaffaroglu@gmail.com</p>\n                                </div>\n                            </div>\n                        </center>\n                })\n            }\n        };\n\n        return (\n            <React.Fragment>\n                <h3 className=\"text-black text-center\" style={{ fontFamily: \"Oswald\" } , { textTransform: 'uppercase' }}><strong> <IoMdContact />  Contact</strong></h3>\n                <hr className=\"separator\" />\n                <Nav variant=\"tabs\" onSelect={handleSelect} defaultActiveKey='/contact/direct'>\n\n                    <Nav.Item>\n                        <LinkContainer exact to=\"/contact/direct\"><Nav.Link eventKey=\"0\" ><GrContact /> <span style={{ fontFamily: \"Raleway\" }}>Direct</span></Nav.Link></LinkContainer>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <LinkContainer exact to=\"/contact/information\"><Nav.Link eventKey=\"1\"><RiInformationLine /> <span style={{ fontFamily: \"Raleway\" }}>Information</span></Nav.Link></LinkContainer>\n                    </Nav.Item>\n\n                </Nav>\n\n                <div className=\"container mt-3\" style={{ marginBottom: \"200px\" }} >\n                    {this.state.content}\n                </div>\n\n            </React.Fragment>\n        )\n    }\n} export default Contact\n","import React, { Component } from 'react'\nimport { Card, ListGroupItem, ListGroup, Alert, Button } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { withRouter } from 'react-router-dom'\nimport CustomSpinner from './CustomSpinner'\nexport class FetchAll extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      projectList: [],\n      current_location: '',\n      Render: false,\n\n\n    }\n    this.fetchAllProjects = this.fetchAllProjects.bind(this)\n\n  }\n  componentWillMount() {\n    this.fetchAllProjects()\n  }\n\n  async fetchAllProjects() {\n    var current_location = this.props.location.pathname\n    var projectResponse = await(fetch(`${this.props.websiteUrl}/api${current_location}`))\n    var data = await projectResponse.json()\n    this.setState({\n      projectList: data,\n      Render:true\n    })\n  }\n\n\n\n  render() {\n    var projects = this.state.projectList\n    const websiteUrl = this.props.websiteUrl\n    if (this.state.Render) {\n      if (projects.length != 0) {\n        \n        return (\n          <React.Fragment>\n            <Alert variant=\"success\">\n              <Alert.Heading><span style={{fontFamily:\"Raleway\"}}>There are {projects.length} results for your search. </span></Alert.Heading>\n              <p style={{fontFamily:\"Raleway\"}}>\n              You can search by title, back-end or front-end technology.\n              </p>\n            </Alert>\n            <div className=\"row\" style={{ marginBottom: \"200px\" }}>\n\n              {projects.map((project, index) => {\n                function urlImage(imageUrl) {\n                  return (`${websiteUrl}/api` + imageUrl)\n                }\n                function urlDetail(detailUrl) {\n                  return (\"/project-detail/\" + detailUrl)\n                }\n                return (\n                  <div key={index} className=\"col-lg-4 col-md-6 col-sm-11 col-xs-12 mt-4\">\n                  <Card className=\"project-card text-center\">\n                    <LinkContainer to={urlDetail(project.slug)}><Card.Img variant=\"top\" className=\"project-card-image\" src={urlImage(project.image)} /></LinkContainer>\n                    <Card.Body><Card.Title><LinkContainer to={urlDetail(project.slug)}><h2 className=\"project-title\" style={{textTransform:\"uppercase\"},{fontFamily:\"Raleway\"}}>{project.title}</h2></LinkContainer><hr style={{border:\"1px solid #cccccc\"}}/></Card.Title>\n                    <Card.Text><span style={{fontFamily:\"Raleway\"}}>{project.description}</span></Card.Text>\n                    </Card.Body>\n                    \n                    <ListGroup className=\"list-group-flush\"><ListGroupItem ><p style={{fontFamily:\"Raleway\"}}>Technologies used: {project.backend_category} {project.backend_category != null && project.frontend_category != null ? ',' : ''} {project.frontend_category}</p></ListGroupItem></ListGroup>\n                    <Card.Body><LinkContainer to={urlDetail(project.slug)}><Button className=\"details-button\" variant=\"success btn\"> <h3 style={{textTransform:\"uppercase\"},{fontFamily:\"Oswald\"}}> DETAILS </h3> </Button></LinkContainer></Card.Body>\n                  </Card>\n                </div>\n                )\n              })}\n            </div>\n          </React.Fragment>\n        )\n      } else {\n        return (\n          <Alert variant=\"danger\">\n            <Alert.Heading ><span style={{fontFamily:\"Raleway\"}}>Couldn't find anything!</span></Alert.Heading>\n            <p style={{fontFamily:\"Raleway\"}}>\n              Looks like there is no project with that title. Please try to search another title.\n        </p>\n          </Alert>\n        )\n      }\n    } else {\n      return (\n        <CustomSpinner/>\n      )\n    }\n  }\n\n}\n\nexport default withRouter(FetchAll)\n","import React from 'react'\nimport {GiPowerLightning} from 'react-icons/gi'\n\nfunction Footer() {\n    return (\n\n        <footer style={{backgroundColor:\"#212121\"}} className=\"footer fixed-bottom text-white text-center\">\n            <div>\n                <span style={{ fontFamily: \"Oswald\" }}><GiPowerLightning/> Powered by <a style={{color:\"#c2f2cf\"}} href=\"https://www.django-rest-framework.org/\" rel=\"noopener noreferrer\" target=\"_blank\">Django Rest API</a> & <a style={{color:\"#c2f2cf\"}} href=\"https://reactjs.org/\" rel=\"noopener noreferrer\" target=\"_blank\">React.js</a>\n                </span>\n            </div>\n        </footer>\n\n    )\n}\n\nexport default Footer\n","import React from 'react';\nimport './App.css';\nimport FetchAll from './components/FetchAll'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { FetchDetails } from './components/FetchDetails';\nimport Idle from './components/Idle';\nimport Navigation from './components/Navigation';\nimport Home from './components/Home';\nimport Contact from './components/Contact';\nimport Search from './components/Search';\nimport Footer from './components/Footer';\nfunction App() {\n  const websiteUrl = 'http://berkgaffaroglu.com'\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navigation />\n        <div className='container content'>\n          <Switch>\n            <Route exact path=\"/\" component={(props) => <Home websiteUrl={websiteUrl} />} />\n            <Route path=\"/projects\" component={(props) => <FetchAll websiteUrl={websiteUrl} />} />\n            <Route path=\"/contact\" component={(props) => <Contact websiteUrl={websiteUrl} />} />\n            <Route path=\"/project-detail/:str\" component={(props) => <FetchDetails websiteUrl={websiteUrl} />}/>\n            <Route path=\"/search/:str\" component={(props) => <Search websiteUrl={websiteUrl} />} />\n            <Route component={Idle} />\n          </Switch>\n\n        </div>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}